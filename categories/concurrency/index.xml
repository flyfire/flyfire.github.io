<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>concurrency on Solarex&#39;s Blog</title>
    <link>https://flyfire.github.io/categories/concurrency/</link>
    <description>Recent content in concurrency on Solarex&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 10 Aug 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://flyfire.github.io/categories/concurrency/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lock Free Multithreading With Atomic Operations</title>
      <link>https://flyfire.github.io/post/2019/08/10/lock-free-multithreading-with-atomic-operations/</link>
      <pubDate>Sat, 10 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfire.github.io/post/2019/08/10/lock-free-multithreading-with-atomic-operations/</guid>
      <description>清空Reeder发现internal/pointers一系列关于多线程的文章，感觉很不错，转载在此。 这是系列第三篇，期待作者继续更新~ Synchronizing threads at</description>
    </item>
    
    <item>
      <title>Introduction to Thread Synchronization</title>
      <link>https://flyfire.github.io/post/2019/08/09/introduction-to-thread-synchronization/</link>
      <pubDate>Fri, 09 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfire.github.io/post/2019/08/09/introduction-to-thread-synchronization/</guid>
      <description>清空Reeder发现internal/pointers一系列关于多线程的文章，感觉很不错，转载在此。 这是系列第二篇。 A look at one of the most popular ways of concurrency control</description>
    </item>
    
    <item>
      <title>A Gentle Introduction to Multithreading</title>
      <link>https://flyfire.github.io/post/2019/08/07/a-gentle-introduction-to-multithreading/</link>
      <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfire.github.io/post/2019/08/07/a-gentle-introduction-to-multithreading/</guid>
      <description>清空Reeder发现internal/pointers一系列关于多线程的文章，感觉很不错，转载在此。 这是系列第一篇。 Approaching the world of concurrency, one step at a time. Modern computers</description>
    </item>
    
    <item>
      <title>Java Threadpoolexecutor</title>
      <link>https://flyfire.github.io/post/2019/08/04/java-threadpoolexecutor/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfire.github.io/post/2019/08/04/java-threadpoolexecutor/</guid>
      <description>本文主要对Executor框架以及Java平台线程池技术进行分析。 Executor框架主要由3大部分组成： 任务。包括被执行任务需要实现的接口</description>
    </item>
    
    <item>
      <title>Java Blockingqueue</title>
      <link>https://flyfire.github.io/post/2019/08/01/java-blockingqueue/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfire.github.io/post/2019/08/01/java-blockingqueue/</guid>
      <description>本文主要分析Java平台BlockingQueue的各个实现。 阻塞队列BlockingQueue是一个支持两个附加操作的队列。这两个附加的操</description>
    </item>
    
    <item>
      <title>Aqs</title>
      <link>https://flyfire.github.io/post/2019/07/28/aqs/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfire.github.io/post/2019/07/28/aqs/</guid>
      <description>AbstractQueuedSynchronizer是很多并发工具类如ReentrantLock的实现基础，本文对其进行分析。 TL;DR 以下是对aq</description>
    </item>
    
    <item>
      <title>Futuretask</title>
      <link>https://flyfire.github.io/post/2019/06/28/futuretask/</link>
      <pubDate>Fri, 28 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfire.github.io/post/2019/06/28/futuretask/</guid>
      <description>本文主要对FutureTask源码进行分析。 Java中一般通过继承Thread类或实现Runnable接口来创建线程，但是这两种方式都有个缺</description>
    </item>
    
    <item>
      <title>Thread</title>
      <link>https://flyfire.github.io/post/2019/05/28/thread/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://flyfire.github.io/post/2019/05/28/thread/</guid>
      <description>本文主要分析Android平台上的Thread类源码，分为Java部分和native部分。 Java部分比较简单，大致过下各个方法吧。 线程创建</description>
    </item>
    
  </channel>
</rss>
